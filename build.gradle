import org.gradle.internal.os.OperatingSystem

buildscript {
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
}

group 'com.ge.predix'
version '1.1.1'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'javafx-gradle-plugin'

mainClassName = "com.ge.predix.mobile.ReferenceApplication"
if (OperatingSystem.current().isMacOsX()) {
    applicationDefaultJvmArgs = ["-Djava.net.useSystemProxies=true", "-Xdock:icon=src/main/resources/icon.png", "-Xdock:name=\"MFL Reference Application\""]
} else {
    applicationDefaultJvmArgs = ["-Djava.net.useSystemProxies=true"]
}
def vendorName = "GE Digital"

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile group: 'de.codecentric.centerdevice', name: 'centerdevice-nsmenufx', version: '2.1.4'
    compile group: 'org.jasypt', name: 'jasypt', version: '1.9.2'
    compile group: 'com.google.guava', name: 'guava', version: '19.0'
    compile group: 'com.couchbase.lite', name: 'couchbase-lite-java', version: '1.3.1'
    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.squareup.dagger:dagger-compiler:1.2.2'
    compile group: 'org.json', name: 'json', version: '20160212'
    compile group: 'com.squareup.okhttp', name: 'okhttp-urlconnection', version: '2.7.5'
    compile group: 'com.squareup.okhttp3', name: 'okhttp-urlconnection', version: '3.6.0'
    compile group: 'com.google.guava', name: 'guava', version: '11.0.2'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    testCompile group: 'junit', name: 'junit', version: '4.11'

    // used for webview debugger
    compile 'org.eclipse.jetty.websocket:websocket-server:9.2.15.v20160210'
    compile 'org.eclipse.jetty.websocket:websocket-servlet:9.2.15.v20160210'
    compile 'org.eclipse.jetty:jetty-server:9.2.15.v20160210'
    compile 'org.eclipse.jetty:jetty-servlet:9.2.15.v20160210'
}
/*
If you just want to create an executable jar uncomment the jar task lines.

If enabled I would recommend skipCopyingDependencies = true in the jfx task if otherwise dependencies will get bundled twice.
*/
//jar {
//    manifest {
//        attributes 'Implementation-Title': project.name,
//                'Implementation-Version': project.version,
//                'Implementation-Vendor': vendorName,
//                'Specification-Version': project.version,
//                'Main-Class': mainClassName,
//                'Class-Path': configurations.runtime.files.collect { "$it.name" }.join(' ')
//    }
//
//
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//}

jfx {
    identifier = group + "." + project.name.replace(" ", "-")
    mainClass = mainClassName
    vendor = vendorName

    nativeReleaseVersion = project.version
    appName = project.name
    jvmArgs = ["-Djava.net.useSystemProxies=true"]
    skipCopyingDependencies = false

    if (OperatingSystem.current().isMacOsX()) {
        bundler = "dmg"
        bundleArguments = [icon : 'src/main/resources/icon.icns', signBundle : false]
    } else if (OperatingSystem.current().isWindows()) {
        bundler = "exe"
        bundleArguments = [icon : 'src/main/resources/icon.ico']
    }

}

